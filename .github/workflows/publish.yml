name: Publish to PyPI

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install --upgrade build twine commitizen

      - name: Bump version with Commitizen
        run: |
          cz bump --yes

      - name: Get new version
        id: get_version
        run: |
          NEW_VERSION=$(grep '^version' pyproject.toml | sed -E 's/version\s*=\s*"([^"]+)".*/\1/')
          echo "New version is $NEW_VERSION"
          echo "::set-output name=version::$NEW_VERSION"

      - name: Create release branch
        run: |
          NEW_BRANCH="release/v${{ steps.get_version.outputs.version }}"
          echo "Creating and pushing branch $NEW_BRANCH"
          git checkout -b "$NEW_BRANCH"
          git push origin "$NEW_BRANCH"

      - name: Build package
        run: |
          python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          echo "tet"
          

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: release/v${{ steps.get_version.outputs.version }}
          base: main
          title: "Release v${{ steps.get_version.outputs.version }}"
          body: "Automated version bump and release via GitHub Actions"
