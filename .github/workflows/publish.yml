name: Publish to PyPI

on:
  release:
    types: [created]

jobs:
  versioning:
    name: Update Version & Changelog
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install --upgrade commitizen

      - name: Update pyproject.toml and Generate Changelog
        run: |
          RELEASE_VERSION=${{ github.event.release.tag_name }}
          echo "Updating version to $RELEASE_VERSION"

          # Update pyproject.toml while on main
          sed -i "s/^version = \".*\"/version = \"$RELEASE_VERSION\"/" pyproject.toml

          # Generate the changelog before switching branches
          cz changelog --incremental

          echo "Checking changes before creating a new branch:"
          git status

          # If no changes, exit to prevent an empty PR
          if [[ -z $(git status --porcelain) ]]; then
            echo "No changes detected, skipping commit and PR creation."
            exit 1
          fi

      - name: Create Release Branch
        run: |
          RELEASE_VERSION=${{ github.event.release.tag_name }}
          BRANCH_NAME="release-$RELEASE_VERSION"

          # Ensure the branch does not already exist
          if git ls-remote --exit-code --heads origin $BRANCH_NAME; then
            echo "Branch $BRANCH_NAME already exists. Deleting it."
            git push origin --delete $BRANCH_NAME
          fi

          # Create the new branch only if changes exist
          git checkout -b $BRANCH_NAME

          # Commit & push changes
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions@github.com"
          git add pyproject.toml CHANGELOG.md
          git commit -m "chore(release): update version to $RELEASE_VERSION and update CHANGELOG"
          git push origin $BRANCH_NAME

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: release-${{ github.event.release.tag_name }}
          base: main
          title: "Release ${{ github.event.release.tag_name }}"
          body: "This PR updates pyproject.toml and CHANGELOG.md for version ${{ github.event.release.tag_name }}."
          draft: false
